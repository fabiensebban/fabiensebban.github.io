Viz.widgets.myStatChart = function (el, statData, countData, options) {
	var icons = {
			'suitcase': 'M99.993,20.614c0.015-5.786-4.813-10.183-10.017-10.187l-18.102,0.001L62.987,0H50H37.013l-8.888,10.429h-18.05C4.833,10.433,0.005,14.829,0,20.615c0.005,0.142,0,46.837,0,46.837c0.005,6.54,4.952,10.293,10.075,10.301h79.901c5.082-0.009,10.03-3.762,10.017-10.302C99.993,67.451,100.008,20.756,99.993,20.614z M39.321,5H50h10.679l4.627,5.429H34.694L39.321,5z',
			'baggage': 'M17.473,82.588h-7.398C4.952,82.58,0.005,78.827,0,72.287c0,0,0.005-46.695,0-46.837  c0.005-5.786,4.833-10.182,10.075-10.186h7.398V82.588L17.473,82.588zM64.025,15.378V5.7c0.028-3.486-3.065-5.715-6.829-5.688c0,0-14.393-0.027-14.341,0c-3.749-0.027-6.894,2.202-6.887,5.688  v9.678H22.48v67.325h55.146V15.378H64.025z M58.961,15.378H40.919v-9.96h18.042V15.378zM82.578,82.588h7.398c5.083-0.009,10.031-3.762,10.017-10.302c0,0,0.015-46.695,0-46.837  c0.015-5.786-4.814-10.182-10.017-10.186h-7.398V82.588L82.578,82.588z',
			'group': 'M25.053,24.8C23.921,24.347,23.469,23.102,23.469,23.102S22.959,23.384,22.959,22.592S23.469,23.102,23.979,20.043999999999997C23.979,20.043999999999997,25.393,19.647,25.111,16.363999999999997H24.771C24.771,16.363999999999997,25.62,12.853999999999997,24.771,11.664999999999997C23.921,10.475999999999997,23.582,9.683999999999997,21.713,9.116999999999997S20.525000000000002,8.662999999999997,19.166,8.720999999999997C17.807000000000002,8.777999999999997,16.674,9.512999999999996,16.674,9.908999999999997C16.674,9.908999999999997,15.825,9.965999999999998,15.485999999999999,10.305999999999997C15.145999999999999,10.645999999999997,14.579999999999998,12.229999999999997,14.579999999999998,12.626999999999997S14.862999999999998,15.684999999999997,15.145999999999999,16.250999999999998L14.809,16.363999999999997C14.526,19.647,15.940999999999999,20.043999999999997,15.940999999999999,20.043999999999997C16.45,23.101999999999997,16.959999999999997,21.799999999999997,16.959999999999997,22.592S16.449999999999996,23.102,16.449999999999996,23.102S15.997999999999996,24.347,14.865999999999996,24.8C13.733999999999996,25.252000000000002,7.449999999999996,27.686,6.9389999999999965,28.196C6.427999999999996,28.707,6.485999999999996,31.084000000000003,6.485999999999996,31.084000000000003H33.43299999999999C33.43299999999999,31.084000000000003,33.49199999999999,28.707000000000004,32.980999999999995,28.196000000000005C32.468999999999994,27.686000000000003,26.184999999999995,25.252000000000006,25.052999999999994,24.800000000000004ZM12.583,24.628C12.484,24.448,12.435,24.318,12.435,24.318S12.003,24.557000000000002,12.003,23.886000000000003S12.435,24.318,12.867,21.727000000000004C12.867,21.727000000000004,14.066,21.391000000000005,13.826,18.608000000000004H13.538C13.538,18.608000000000004,13.681000000000001,18.017000000000003,13.775,17.274000000000004C13.771,16.966000000000005,13.781,16.638000000000005,13.812000000000001,16.278000000000006L13.850000000000001,15.852000000000006C13.829,15.360000000000007,13.743000000000002,14.913000000000006,13.538000000000002,14.626000000000005C12.818000000000001,13.619000000000005,12.530000000000001,12.947000000000005,10.947000000000003,12.467000000000006C9.364000000000003,11.987000000000005,9.939000000000004,12.082000000000006,8.788000000000004,12.131000000000006C7.636000000000004,12.179000000000006,6.676000000000004,12.802000000000005,6.676000000000004,13.139000000000006C6.676000000000004,13.139000000000006,5.956000000000004,13.187000000000006,5.668000000000004,13.475000000000007C5.397000000000004,13.746000000000008,4.963000000000004,14.937000000000006,4.911000000000004,15.360000000000007V15.641000000000007C4.958000000000004,16.294000000000008,5.169000000000004,18.090000000000007,5.380000000000004,18.513000000000005L5.094000000000005,18.609000000000005C4.855000000000005,21.392000000000007,6.053000000000004,21.728000000000005,6.053000000000004,21.728000000000005C6.485000000000005,24.319000000000006,6.917000000000004,23.216000000000005,6.917000000000004,23.887000000000004S6.485000000000004,24.319000000000003,6.485000000000004,24.319000000000003S6.102000000000004,25.376,5.142000000000004,25.758000000000003C5.081000000000004,25.782000000000004,5.003000000000004,25.814000000000004,4.910000000000004,25.85V31.084000000000003H5.485000000000004C5.456000000000004,29.806000000000004,5.562000000000004,28.157000000000004,6.231000000000003,27.490000000000002C6.587000000000003,27.135,7.754000000000003,26.551000000000002,12.583000000000004,24.628ZM34.913,15.572000000000001C34.873,15.194,34.785999999999994,14.857000000000001,34.620999999999995,14.626000000000001C33.901999999999994,13.618000000000002,33.61299999999999,12.947000000000001,32.03099999999999,12.467000000000002C30.446999999999992,11.987000000000002,31.022999999999993,12.082000000000003,29.87099999999999,12.131000000000002C28.71999999999999,12.179000000000002,27.75999999999999,12.802000000000001,27.75999999999999,13.139000000000003C27.75999999999999,13.139000000000003,27.04099999999999,13.187000000000003,26.751999999999992,13.475000000000003C26.48099999999999,13.747000000000003,26.042999999999992,14.947000000000003,25.993999999999993,15.366000000000003H26.026999999999994L26.106999999999992,16.279000000000003C26.126999999999992,16.510000000000005,26.12899999999999,16.715000000000003,26.133999999999993,16.924000000000003C26.223999999999993,17.590000000000003,26.343999999999994,18.274000000000004,26.46399999999999,18.513L26.17799999999999,18.609C25.93899999999999,21.392000000000003,27.13799999999999,21.728,27.13799999999999,21.728C27.56999999999999,24.319000000000003,28.00099999999999,23.216,28.00099999999999,23.887S27.568999999999992,24.319,27.568999999999992,24.319S27.51599999999999,24.461,27.40599999999999,24.657C32.17599999999999,26.557,33.33299999999999,27.137,33.68499999999999,27.491C34.35499999999999,28.158,34.45999999999999,29.806,34.43099999999999,31.085H34.91099999999999V25.779C34.89499999999999,25.773,34.87299999999999,25.764,34.85899999999999,25.758C33.899999999999984,25.375,33.51599999999999,24.319,33.51599999999999,24.319S33.08299999999999,24.558,33.08299999999999,23.887S33.51599999999999,24.319,33.94699999999999,21.728C33.94699999999999,21.728,34.75099999999999,21.499000000000002,34.90999999999999,19.887V18.66C34.90899999999999,18.642,34.90899999999999,18.627,34.90699999999999,18.609H34.61799999999999C34.61799999999999,18.609,34.83299999999999,17.719,34.90999999999999,16.748V15.572000000000001Z',
			'cloud': 'M28.345,17.904C28.363999999999997,17.709,28.375,17.512,28.375,17.313C28.375,13.860999999999999,25.576999999999998,11.062999999999999,22.125,11.062999999999999C19.446,11.062999999999999,17.167,12.751999999999999,16.278,15.122C15.688999999999998,14.475999999999999,14.848999999999998,14.063,13.905999999999999,14.063C12.127999999999998,14.063,10.687,15.504000000000001,10.687,17.282C10.687,17.492,10.709999999999999,17.697,10.748999999999999,17.895C8.376999999999999,18.286,6.5619999999999985,20.331,6.5619999999999985,22.813C6.5619999999999985,25.575,8.800999999999998,27.813,11.561999999999998,27.813H27.436999999999998C30.198999999999998,27.813,32.437,25.575,32.437,22.813C32.437999999999995,20.362,30.671999999999997,18.332,28.345,17.904Z',
			'diamond': 'M0,22.778 45.041,73.119 24.476,22.778 zM43.389,0 17.406,0 26.908,14.919 zM11.854,0 0,18.618 23.711,18.618 zM50,18.618 70.565,18.618 50,0 29.433,18.618 zM50,22.778 29.433,22.778 50,73.119 70.565,22.778 zM82.82,0 56.84,0 73.32,14.919 zM76.287,18.618 100,18.618 88.144,0 zM54.957,73.119 100,22.778 75.523,22.778 z',
			'man': 'M18.118,0 a8.159,8.159 0 1,0 0,16.318a8.159,8.159 0 1,0 0,-16.318zM8.472,95.426c0,2.524,2.05,4.574,4.574,4.574c2.529,0,4.576-2.05,4.576-4.574l0.004-38.374h2.037L19.65,95.426 c0,2.524,2.048,4.574,4.574,4.574s4.573-2.05,4.573-4.574l0.02-66.158h2.006v24.38c0,4.905,6.398,4.905,6.384,0v-24.9 c0-5.418-3.184-10.728-9.523-10.728L9.396,18.012C3.619,18.012,0,22.722,0,28.599v25.05c0,4.869,6.433,4.869,6.433,0v-24.38h2.048 L8.472,95.426z',
			'vizme': 'M55.957,200.183 h81.063V0.817C115.5,0.5,104.167,28.833,84.696,69.605c-6.623,11.55-15.863,31.854-28.739,31.854V200.183zM0.5,52.851v147.025h45.425V101.65 C32.833,101.65,11.929,96.828,0.5,52.851zM147.03,0.5v200h53.47V70.564 C200.5,70.564,189.457,5.875,147.03,0.5z',
			'circle': 'M18.118,0 a8.159,8.159 0 1,0 0,16.318a8.159,8.159 0 1,0 0,-16.318z',
			'heart': 'M49.999,91.46c3.944-3.943,26.458-26.47,40.533-40.543c12.61-12.611,12.341-30.992,0.876-42.395  C79.943-2.884,61.404-2.834,49.999,8.632C38.595-2.834,20.056-2.884,8.591,8.522C-2.874,19.925-3.142,38.306,9.467,50.917  C23.541,64.99,46.058,87.517,49.999,91.46z',
			'exercise': 'M71.046,17.12c3.911,0,7.078-3.167,7.078-7.078c0-3.889-3.167-7.055-7.078-7.055c-3.889,0-7.055,3.166-7.055,7.055  C63.992,13.954,67.158,17.12,71.046,17.12zM76.308,18.704H65.994L48.415,1.125c-1.374-1.443-3.655-1.513-5.099-0.116c-1.444,1.374-1.514,3.655-0.14,5.099  l18.37,18.394v60.955c0,2.212,1.77,3.981,3.958,3.981c2.212,0,3.981-1.77,3.981-3.981V52.394h3.213l0.023,33.062  c0,2.212,1.793,3.981,3.981,3.981s3.958-1.77,3.958-3.981l-0.023-60.955L99.009,6.107c1.373-1.444,1.303-3.725-0.141-5.099  c-1.443-1.397-3.725-1.327-5.099,0.116L76.308,18.704zM38.938,45.595c-1.071-1.094-2.538-1.746-4.167-1.746H19.975c-1.63,0-3.097,0.652-4.145,1.746L0.999,60.427  c-1.374,1.443-1.327,3.725,0.116,5.099s3.749,1.327,5.099-0.116l11.501-11.502v15.366H4.817c-2.375,0-4.284,1.909-4.284,4.284  c0,1.234,0.466,2.328,1.304,3.12l14.529,14.528c1.28,1.887,3.795,2.491,5.797,1.327c2.119-1.21,2.817-3.888,1.606-5.983  l-8.289-8.266l0.163,0.023h23.807l-8.312,8.266c-1.188,2.096-0.489,4.772,1.606,5.983c2.002,1.164,4.541,0.559,5.821-1.327  l14.529-14.528c0.838-0.792,1.303-1.886,1.303-3.12c0-2.375-1.908-4.284-4.284-4.284H37.239V54.093l11.292,11.339  c1.374,1.444,3.656,1.49,5.099,0.116c1.443-1.373,1.49-3.654,0.116-5.099L38.938,45.595zM27.518,42.335c3.9,0,7.043-3.166,7.043-7.055c0-3.911-3.144-7.055-7.043-7.055c-3.888,0-7.055,3.144-7.055,7.055  C20.463,39.169,23.63,42.335,27.518,42.335z',
			'infinity': 'M93.29,5.042c-8.948-6.722-23.507-6.722-32.454,0L50,13.185L39.164,5.042c-8.948-6.722-23.506-6.722-32.453,0  c-8.947,6.724-8.947,17.662,0,24.386c8.947,6.722,23.505,6.722,32.452,0L50,21.284l10.836,8.144c8.947,6.722,23.507,6.722,32.454,0  C102.236,22.704,102.236,11.766,93.29,5.042z M33.829,25.418c-6.006,4.514-15.778,4.514-21.784,0  c-6.006-4.512-6.006-11.854,0-16.368c6.006-4.512,15.778-4.512,21.784,0h0l10.836,8.143l-0.056,0.041l0.055,0.042L33.829,25.418z   M87.955,25.418c-6.007,4.514-15.778,4.514-21.785,0l-10.835-8.142l0.056-0.042l-0.056-0.041L66.17,9.05l0,0  c6.007-4.512,15.778-4.512,21.785,0C93.961,13.563,93.961,20.906,87.955,25.418z'
		},
		icon_map = {
			"-1": 'infinity',
			0: 'cloud',
			1: 'suitcase',
			2: 'man',
			3: 'diamond'
		};
			// [{"r":8.159,"cx":18.118,"cy":8.159,"type":"circle","fill":"#000","stroke":"none"},{"path":"","type":"path","fill":"#000","stroke":"none"}],
	function pickScale(number) {
		if (isNaN(number)) { return {max: null, inc: null}; }
		if (number < 10) { return {max: 10, inc: 1}; }
		var scale = Math.floor(Math.log(number) / (Math.log(10)));
		var inc = Math.pow(10, (scale - 1));
		if (number === 500) { return {max: 500, inc: 50}; }
		if (number < (inc * 20)) { return {max: inc * 20, inc: inc * 2}; }
		if (number < (inc * 50)) { return {max: inc * 50, inc: inc * 5}; }
		if (number < (inc * 80)) { return {max: inc * 80, inc: inc * 8}; }
		return {max: inc * 100, inc: inc * 10};
	}
	function stripPluralText(number, text) {
		return number > 1 ? text.replace("(s)", "s") : text.replace("(s)", "");
	}
	function calculateNumber(stat, countData) {
		if (stat.category === "1" && !stat.number) {
			return countData.year_work_sum;
		} else if (stat.category === "2") {
			return countData.connections;
		} else if (!stat.number) {
			return 0;
		} else {
			return stat.number;
		}
	}
	function calculateUnit(stat) {
		if (stat.category === "1" || stat.unit === "2") {
			return "year(s)";
		} else if (stat.category === "2") {
			return "connection(s)";
		} else if (stat.unit === "1") {
			return 'dollar(s)';
		} else {
			return "unit(s)";
		}
	}
	function createOneRow(id) {
		var table = Viz.createTag('table');
		table.cellPadding = "0";
		table.cellSpacing = "0";
		table.style.width = "1px";
		table.style.margin = "0 auto 0 auto";
		var row = Viz.createTag('tr', id);
		table.appendChild(row);
		return {table: table, row: row};
	}
	function getIconPath(iconId) {
		if (icon_map.hasOwnProperty(iconId)) {
			return icons[icon_map[iconId]];
		} else {
			return icons.cloud;
		}
	}
	function scaleIcon(icon, size) {
		var scale = (icon.getBBox().width > icon.getBBox().height) ? (size / icon.getBBox().width) : (size / icon.getBBox().height);
		icon.scale(scale);
	}
	function drawIcon(paper, iconId, index, fill, iconSize) {
		fill = fill || '#EC008C';
		iconSize = iconSize || 40;
		// Draw
		var icon = paper.path(getIconPath(iconId)).attr({fill: fill, 'stroke': 'none'});
		
		// Scale
		scaleIcon(icon, iconSize);
		
		// Move
		icon.translate(-icon.getBBox().x + (index % 5) * (iconSize + 1) + (iconSize - icon.getBBox().width) / 2, -icon.getBBox().y + Math.floor(index / 5) * (iconSize + 4) + (iconSize - icon.getBBox().height) / 2);
		
		return icon;
	}
	var v = Viz,
		root = (typeof el === "string") ? document.getElementById(el) : el,
		opt = options || {},
		newId = opt.newId || '__skills',
		div = v.createTag('div', newId),
		statDiv = v.createTag('div', 'stat'),
		data = v.clone(statData),
		limit = opt.limit || 5,
		showTitle = opt.showTitle || 'show',
		
		titleFont = opt.titleFont || 'museo-slab',
		titleColor = opt.titleColor || 'black',
		numberFont = opt.numberFont || 'ff-dagny-web-pro',
		numberColor = opt.numberColor || '#ED008C',
		iconColor = v.isTooLight(opt.iconColor || 'black') ? 'black' : opt.iconColor || 'black',
		iconFadedColor = opt.iconFadedColor || v.lightenColor(iconColor, 128),
		textFont = opt.textFont || 'ff-dagny-web-pro',
		textColor = opt.textColor || 'black';

	root.appendChild(div);
		
	if (showTitle  === 'show') {
		$(div).append('<div style="font-family:' + titleFont + '; font-size:35px; font-weight:bold; text-align:center; text-transform:uppercase; margin-bottom: 12px;">My Stats</div>');
	}
	
	if (!(data && data.length > 0)) {
		return;
	}
	
	var columns = [];
	var statIndex = 0;
	for (statIndex = 0; statIndex < data.length; statIndex++) {
		var stat = data[statIndex],
			columnTd = v.createTag('td'),
			columnDiv = v.createTag('div'),
			iconDiv = v.createTag('div'),
			legendDiv = v.createTag('div'),
			legendIconSpan = v.createTag('span');
			
		var number = calculateNumber(stat, countData),
			unit = calculateUnit(stat),
			scale = pickScale(number),
			prefix = (stat.unit === "1") ? '$' : '',
			postfix = (stat.category === "2" && number === 500) ? '+' : '';

		var numberText = '<span style="font-family:' + numberFont + '; font-size: 48px; color: ' + numberColor + '; font-weight: bold;">' + prefix + number + postfix + '</span>';
		var labelText = '<span style="font-family:' + textFont + '; font-size: 24px; color: ' + textColor + '; font-weight: bold;">' + stripPluralText(number, stat.label) + '</span>';
		var text = '<div>' + numberText + ' ' + labelText + '</div>';
		var legendHtml = '<span style="display: inline-block; vertical-align: middle; margin-left: 4px;">= ' + scale.inc + ' ' + stripPluralText(scale.inc, unit) + '</span>';

		columnTd.appendChild(iconDiv);
		columnTd.appendChild(columnDiv);
		columnTd.appendChild(legendDiv);
		legendDiv.appendChild(legendIconSpan);

		columnTd.style.verticalAlign = 'top';
		columnTd.style.padding = '0';
		columnDiv.style.width = "226px";
		columnDiv.style.minHeight = '100px';
		columnDiv.style.margin = "0 auto 0 auto";
		legendDiv.style.position = "relative";
		legendDiv.style.bottom = "0px";
		legendDiv.style.fontFamily = textFont;
		legendDiv.style.fontSize = '12px';
		legendDiv.style.color = textColor;
		legendDiv.style.opacity = 0.7;
		legendIconSpan.style.display = 'inline-block';
		legendIconSpan.style.verticalAlign = 'middle';
		
		// TODO draw icons
		$(columnDiv).append(text);

		if (scale.inc && scale.max) {
			var paper = new Raphael(iconDiv, 205, 100);
			$(legendDiv).append(legendHtml);
			var iconIndex = 0;
			var repeat = Math.floor(number / scale.inc);
			var extra = number - (repeat * scale.inc);
			var iconId = (stat.unit === "1") ? 3 : stat.icon;
			for (iconIndex = 0; iconIndex < repeat; iconIndex++) {
				icon = drawIcon(paper, iconId, iconIndex, iconColor);
			}
			if (extra > 0) {
				var percent = Math.ceil((extra / scale.inc) * 100);
				drawIcon(paper, iconId, iconIndex, '0-' + iconColor + '-' + iconColor + ':' + percent + '-' + iconFadedColor + ':' + percent);
			}
			// Add legend icon
			var legendPaper = new Raphael(legendIconSpan, 30, 30);
			var legendIcon = drawIcon(legendPaper, iconId, 0, iconFadedColor, 29);
			
		} else {
			var legendHtml = '<span style="display: inline-block; vertical-align: middle; margin-left: 4px;">= infinite</span>';
			$(legendDiv).append(legendHtml);
			var paper = new Raphael(iconDiv, 100, 100);
			var icon = drawIcon(paper, -1, 0, iconColor, 99);
			var legendPaper = new Raphael(legendIconSpan, 30, 30);
			var legendIcon = drawIcon(legendPaper, -1, 0, iconFadedColor, 29);
		}
		columns.push(columnTd);
			
		if (statIndex !== (data.length - 1)) {
			var dividerColumn = v.createTag('td');
			dividerColumn.style.width = "8px";
			dividerColumn.style.padding = '0';
			columns.push(dividerColumn);
		}
	}

	var tableJson = createOneRow();
	div.appendChild(statDiv);
	statDiv.appendChild(tableJson.table);

	var columnIndex = 0;
	for (columnIndex in columns) {
		if (columns.hasOwnProperty(columnIndex)) {
			tableJson.row.appendChild(columns[columnIndex]);
		}
	}
	var dividerHeight = tableJson.table.offsetHeight;
	for (columnIndex = 1; columnIndex < columns.length; columnIndex += 2) {
		var divider = columns[columnIndex];
		
		var dividerRaphael = new Raphael(divider, 8, dividerHeight);
		//dividerRaphael.path(['M', 4, 4, 'L', 4, (dividerHeight - 4)]).attr({stroke: 'black', 'stroke-width': '4', 'stroke-dasharray': '-', 'stroke-linecap': 'round'});
		dividerRaphael.path(['M', 4, 4, 'L', 4, (dividerHeight - 4)]).attr({stroke: 'black', 'stroke-width': '4', 'stroke-dasharray': '-'});
	}
};